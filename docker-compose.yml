version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: financestream-postgres
    environment:
      POSTGRES_DB: financestream
      POSTGRES_USER: financestream
      POSTGRES_PASSWORD: financestream123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/shared/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - financestream-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: financestream-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - financestream-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: financestream-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - financestream-network

  # Kibana (Optional - for Elasticsearch visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: financestream-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - financestream-network

  # MinIO (S3-compatible storage for development)
  minio:
    image: minio/minio:latest
    container_name: financestream-minio
    environment:
      MINIO_ROOT_USER: financestream
      MINIO_ROOT_PASSWORD: financestream123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - financestream-network

  # API Gateway (Main backend service)
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile.dev
    container_name: financestream-api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://financestream:financestream123@postgres:5432/financestream
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=financestream
      - S3_SECRET_KEY=financestream123
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./backend/api-gateway:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - minio
    networks:
      - financestream-network

  # Web Frontend
  web-frontend:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile.dev
    container_name: financestream-web
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/web:/app
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - financestream-network

  # Nginx (Reverse proxy for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: financestream-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - web-frontend
    networks:
      - financestream-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  minio_data:

networks:
  financestream-network:
    driver: bridge